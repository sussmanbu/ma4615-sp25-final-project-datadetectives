---
title: "Blog Post 3"
subtitle: "Data Loading/Cleaning"
description:  |
  This is Data Detectives' third blog post where we further investigate, load,
  and clean our initial dataset.
author: "Data Detectives"
date: "2025-03-24"
date-modified: "2025-03-24"
draft: FALSE
---
## Data Cleaning

TODO:  Use figures or tables to help explain the data. For example, showing a histogram or bar chart for a particularly important variable can provide a quick overview of the values that variable tends to take.
TODO: link clean_data.R in placeholder

Our data set required significant cleaning. In order to work with our CSV file, we needed to decode the integers that served as placeholders for column names, remove "non-interview" data points that we can't compare across years, and decode integer values representing race, grade, etc. All the R scripts we used to load and clean the data can be found [here](https://www.bls.gov/nls/nlsy79.htm). For this process, we primarily depended on the tidyverse library and other methods discussed in lecture. 

To begin with, working with integer-coded columns would have been incredibly difficult. To combat this issue, we created began with gathering all the integer codes and their String equivalents. Next, we created R scripts to rename all our selected columns based on their integer codes.  

The script is in our clean_data.R as follows: 

```{r c1}
### 3. DECODE COLUMNS R000010 (Case ID), R0173600 (Sample ID), R0214700 (Race), R0214800 (Sex), T2272800 (Q3-4| Highest Grade Completed),...
#T3045300 (total income from wages and salary prev cal year), T3108400 (marital status), T3108700 (age at int. date (2010))

colnames(nls_data_clean) <- c(
  "Case_ID",
  "Sample_ID",
  "Race",
  "Sex",
  "Highest_Grade_Completed",
  "Total_Income_Prev_Year",
  "Marital_Status",
  "Age_2010"
)

nls_data_clean <- nls_data %>%
  select(
    R000010,   # Case ID
    R0173600,  # Sample ID
    R0214700,  # Race
    R0214800,  # Sex
    T2272800,  # Highest Grade Completed
    T3045300,  # Total Income from Wages
    T3108400,  # Marital Status
    T3108700   # Age at Interview (2010)
  ) %>%
  rename(
    Case_ID = R000010,
    Sample_ID = R0173600,
    Race = R0214700,
    Sex = R0214800,
    Highest_Grade_Completed = T2272800,
    Total_Income_Prev_Year = T3045300,
    Marital_Status = T3108400,
    Age_2010 = T3108700
  )

```

Our next task was removing non-interview values. These rows, indicated by -5 values, imply that the interviewee either quit or was removed from the data sampling. Therefore, they may be included in earlier years and not in late years. To improve our modeling, we must remove these values. 

The R script to do so is as follows:
```{r c2}
### 4. REMOVE non-interviews(-5)
nls_data_clean <- nls_data_clean %>%
  filter(
    Race >= 0,
    Sex >= 0,
    Highest_Grade_Completed >= 0,
    Marital_Status >= 0
  )
```

Finally, our last challenge was modifying actual data points in every row. For example, rather than listing a respondents race, the information is coded in integers (i.e. 1 = "black", 2 = "white", etc.) This would be incredibly difficult to keep track of in the long term scope of our project, therefore, we decided to modify these values. 

Columns race, sex, highest grade completed, and marital status were all encoded using this style. Consequently, we used similar R scripts to decode all of these columns. The R script to do so is as follows: 
```{r c3}
```

